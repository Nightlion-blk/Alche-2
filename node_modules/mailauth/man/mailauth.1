.TH "MAILAUTH" "1" "December 2024" "v4.8.2" "Mailauth Help"
.SH "NAME"
\fBmailauth\fR
.QP
.P
mailauth \- authenticate, sign and seal emails

.
.SH SYNOPSIS
.P
\fBmailauth\fP \fIcommand\fR [ \fIcommand_opts\fR ] [ \fIemail\fR ]
.P
\fBmailauth help\fP
.P
\fBmailauth\fP \fIcommand\fR \fBhelp\fP
.SH DESCRIPTION
.P
Mailauth is an email authentication application to validate SPF, DKIM, DMARC, and ARC\. You can also sign emails with DKIM digital signatures and seal messages with ARC\.
.SH COMMANDS
.P
\fBreport\fR
.br
Validate an email message and return a report in JSON format
.P
\fBsign\fR
.br
Sign an email with a DKIM digital signature
.P
\fBseal\fR
.br
Authenticates an email and seals it with an ARC digital signature
.P
\fBspf\fR
.br
Authenticates SPF for an IP address and email address
.P
\fBlicense\fR
.br
Display licenses for mailauth and included modules
.SH Website
.P
\fIhttps://github\.com/postalsys/mailauth\fR
.SH EXAMPLES
.P
\fBnpm install mailauth \-g\fP
.P
\fBmailauth report /path/to/email\.eml\fP
.P
\fBcat /path/to/email\.eml | mailauth report\fP
.P
\fBmailauth sign /path/to/email\.eml \-d kreata\.ee \-s test \-k /path/to/key\fP
.P
\fBmailauth spf \-f andris@wildduck\.email \-i 217\.146\.76\.20\fP
.SH EMAIL ARGUMENT
.P
Email argument defines the path to the email message file in EML format\. If not specified, then
content is read from standard input\.
.SH OPTIONS
.RS 0
.IP \(bu 2
\fB\-\-verbose\fP, \fB\-v\fP
Enable silly verbose mode
.IP \(bu 2
\fB\-\-version\fP
Print application version
.IP \(bu 2
\fB\-\-client\-ip\fP, \fB\-i <ip>\fP
Client IP used for SPF checks\. If not set, then parsed from the latest Received header\. (\fBreport\fP, \fBseal\fP, \fBspf\fP)
.IP \(bu 2
\fB\-\-mta\fP, \fB\-m <hostname>\fP
The hostname of this machine, used in the \fBAuthentication\-Results\fP header\. (\fBreport\fP, \fBseal\fP, \fBspf\fP)
.IP \(bu 2
\fB\-\-helo\fP, \fB\-e <hostname>\fP
Client hostname from the EHLO/HELO command, used in some specific SPF checks\. (\fBreport\fP, \fBseal\fP, \fBspf\fP)
.IP \(bu 2
\fB\-\-sender\fP, \fB\-f <address>\fP
The email address from the \fBMAIL FROM\fP command\. If not set, the address from the latest \fIReturn\-Path\fR header is used instead\. (\fBreport\fP, \fBseal\fP, \fBspf\fP)
.IP \(bu 2
\fB\-\-dns\-cache\fP, \fB\-n <file>\fP
Path to a JSON file with cached DNS responses\. If this file is given, then no actual DNS requests are performed\. Anything that is not listed returns an \fBENOTFOUND\fP error\. (\fBreport\fP, \fBseal\fP, \fBspf\fP)
.IP \(bu 2
\fB\-\-private\-key\fP, \fB\-k <file>\fP
Path to a private key for signing\. Allowed key types are RSA and Ed25519 (\fBsign\fP, \fBseal\fP)
.IP \(bu 2
\fB\-\-domain\fP, \fB\-d <domain>\fP
Domain name for signing\. (\fBsign\fP, \fBseal\fP)
.IP \(bu 2
\fB\-\-selector\fP, \fB\-s <selector>\fP
Key selector for signing\. (\fBsign\fP, \fBseal\fP)
.IP \(bu 2
\fB\-\-algo\fP, \fB\-a <algo>\fP
Signing algorithm\. Defaults either to \fIrsa\-sha256\fR or \fIed25519\-sha256\fR depending on the private key format\. (\fBsign\fP, \fBseal\fP)
.IP \(bu 2
\fB\-\-canonicalization\fP, \fB\-c <algo>\fP
Canonicalization algorithm\. Defaults to \fIrelaxed/relaxed\fR\|\. (\fBsign\fP)
.IP \(bu 2
\fB\-\-body\-length\fP, \fB\-l <number>\fP
The maximum length of the canonicalized body to sign\. (\fBsign\fP)
.IP \(bu 2
\fB\-\-time\fP, \fB\-t <number>\fP
Signing time as a Unix timestamp\. (\fBsign\fP, \fBseal\fP)
.IP \(bu 2
\fB\-\-header\-fields\fP, \fB\-h <list>\fP
Colon separated list of header field names to sign\. (\fBsign\fP, \fBseal\fP)
.IP \(bu 2
\fB\-\-headers\-only\fP, \fB\-o\fP
Return signing headers only\. By default, the entire message is printed to the console\. (\fBsign\fP, \fBseal\fP, \fBspf\fP)
.IP \(bu 2
\fB\-\-max\-lookups\fP, \fB\-x\fP
How many DNS lookups allowed for SPF validation\. Defaults to 10\. (\fBreport\fP, \fBspf\fP)
.IP \(bu 2
\fB\-\-max\-void\-lookups\fP, \fB\-z\fP
How many empty DNS lookups allowed for SPF validation\. Defaults to 2\. (\fBreport\fP, \fBspf\fP)

.RE
.SH DNS CACHE
.P
For cached DNS requests, use the following JSON object structure: primary keys are domain names, and subkeys are resource record types\.
.P
.RS 2
.nf
{
    "selector\._domainkey\.example\.com": {
        "TXT": [
            [
                "v=DKIM1;k=rsa;p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQ\.\.\.",
                "\.\.\.sOLccRAmVAOmacHmayjDROTw/XilzErJj+uVAicGYfs10Nz+EUuwIDAQAB"
            ]
        ]
    }
}
.fi
.RE
.P
You can split longer TXT strings into multiple strings\. There is no length limit, unlike in actual DNS so you can put the entire public key into a single string\.
.SH BUGS
.P
Please report any bugs to https://github\.com/postalsys/mailauth/issues\.
.SH LICENSE
.P
Copyright (c) 2020\-2024, Postal Systems (MIT)\.
.SH SEE ALSO
.P
node\.js(1)

